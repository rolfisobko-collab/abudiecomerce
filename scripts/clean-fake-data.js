const mongoose = require('mongoose');
require('dotenv').config();

async function cleanFakeData() {
  try {
    console.log('üîç [CLEAN DEBUG] Conectando a la base de datos...');
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ [CLEAN DEBUG] Conectado a MongoDB');
    
    const db = mongoose.connection.db;
    const waachatCollection = db.collection('waachat');
    
    console.log('üîç [CLEAN DEBUG] Limpiando datos falsos de la colecci√≥n waachat...');
    
    // Eliminar todos los mensajes falsos
    const deleteResult = await waachatCollection.deleteMany({});
    console.log(`üóëÔ∏è [CLEAN DEBUG] Eliminados ${deleteResult.deletedCount} mensajes falsos`);
    
    // Verificar que la colecci√≥n est√© vac√≠a
    const remainingCount = await waachatCollection.countDocuments();
    console.log(`üìä [CLEAN DEBUG] Mensajes restantes en la BD: ${remainingCount}`);
    
    if (remainingCount === 0) {
      console.log('‚úÖ [CLEAN DEBUG] BD limpia, lista para datos reales');
    } else {
      console.log('‚ö†Ô∏è [CLEAN DEBUG] A√∫n hay mensajes en la BD');
    }
    
  } catch (error) {
    console.error('‚ùå [CLEAN DEBUG] Error:', error);
  } finally {
    await mongoose.connection.close();
    console.log('üîå [CLEAN DEBUG] Conexi√≥n cerrada');
  }
}

cleanFakeData();
